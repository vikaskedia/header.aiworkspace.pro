"use strict";const h=require("@supabase/supabase-js"),e=require("./utils/authRedirect.js");async function p(){try{console.log("[auth][init] Starting cross-subdomain authentication initialization..."),e.ensureCrossSubdomainCookies([e.ACCESS_COOKIE,e.REFRESH_COOKIE]),E();const s=await C(2,100);return s.success?(console.log("[auth][init] Cross-subdomain authentication initialized successfully"),{success:!0,session:s.session}):(console.log("[auth][init] Cross-subdomain authentication initialization completed (no active session)"),{success:!1,error:s.error})}catch(s){return console.error("[auth][init] Error during cross-subdomain authentication initialization:",s),{success:!1,error:s}}}async function g(){try{e.ensureCrossSubdomainCookies([e.ACCESS_COOKIE,e.REFRESH_COOKIE]);const s=e.getCookie(e.ACCESS_COOKIE),n=e.getCookie(e.REFRESH_COOKIE);if(s&&n){const{data:{session:i}}=await exports.supabase.auth.getSession();if(!i){const{data:o,error:r}=await exports.supabase.auth.setSession({access_token:s,refresh_token:n});r?console.log("[auth][restore] error",r):console.log("[auth][restore] done",!!o.session)}}else console.log("[auth][restore] no cookies present");e.syncCookiesToLocalStorage()}catch(s){console.log("[auth][restore] exception",s)}}function E(){console.log("[auth][listener] Setting up auth state listener..."),exports.supabase.auth.onAuthStateChange(async(s,n)=>{switch(console.log("[auth][listener] Auth state changed:",s,!!n),s){case"TOKEN_REFRESHED":console.log("[auth][listener] Token refreshed successfully"),n&&(e.setSessionCookie(e.ACCESS_COOKIE,n.access_token,60*60*24*365),e.setSessionCookie(e.REFRESH_COOKIE,n.refresh_token,60*60*24*365),e.syncCookiesToLocalStorage());break;case"SIGNED_IN":console.log("[auth][listener] User signed in"),n&&(e.setSessionCookie(e.ACCESS_COOKIE,n.access_token,60*60*24*365),e.setSessionCookie(e.REFRESH_COOKIE,n.refresh_token,60*60*24*365),e.syncCookiesToLocalStorage());break;case"SIGNED_OUT":console.log("[auth][listener] User signed out");break;case"USER_UPDATED":console.log("[auth][listener] User updated");break;default:console.log("[auth][listener] Unhandled auth event:",s)}})}async function C(s=3,n=200){var i;for(let o=1;o<=s;o++)try{console.log(`[auth][restore] Attempt ${o}/${s}`);let r=null;try{const t=await exports.supabase.auth.getSession();r=(i=t==null?void 0:t.data)==null?void 0:i.session}catch(t){console.warn("[auth][restore] Error getting Supabase session:",t)}if(r&&r.user)return console.log("[auth][restore] Active session found"),{success:!0,session:r};o>1&&(console.log("[auth][restore] Re-syncing cross-subdomain cookies..."),e.ensureCrossSubdomainCookies([e.ACCESS_COOKIE,e.REFRESH_COOKIE]),await new Promise(t=>setTimeout(t,n*o)));const u=e.getCookie(e.ACCESS_COOKIE),l=e.getCookie(e.REFRESH_COOKIE);if(console.log(`[auth][restore] Cookie check - Access: ${!!u}, Refresh: ${!!l}`),u&&l){console.log("[auth][restore] Attempting to restore session from cookies...");try{const{data:t,error:S}=await exports.supabase.auth.setSession({access_token:u,refresh_token:l});if(S){if(console.log(`[auth][restore] Attempt ${o} failed:`,S.message),o===s)return{success:!1,error:S};continue}if(t.session)return console.log("[auth][restore] Session restored successfully"),e.setSessionCookie(e.ACCESS_COOKIE,t.session.access_token,60*60*24*365),e.setSessionCookie(e.REFRESH_COOKIE,t.session.refresh_token,60*60*24*365),e.syncCookiesToLocalStorage(),{success:!0,session:t.session}}catch(t){if(console.warn(`[auth][restore] setSession error on attempt ${o}:`,t),o===s)return{success:!1,error:t};continue}}else if(console.log(`[auth][restore] Attempt ${o} - No cookies found`),o===s)return{success:!1,error:"No valid session or cookies"};o<s&&await new Promise(t=>setTimeout(t,n*o))}catch(r){if(console.log(`[auth][restore] Attempt ${o} exception:`,r),o===s)return{success:!1,error:r}}return console.log("[auth][restore] All attempts failed"),{success:!1,error:"All restoration attempts failed"}}const a="https://oqdnbpmmgntqtigstaow.supabase.co",c="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9xZG5icG1tZ250cXRpZ3N0YW93Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQ0NTk2NDYsImV4cCI6MjA1MDAzNTY0Nn0.rn0nRY9xLgLt-ajiSPeG0PcdS9V-549C1yeqhcxxG40";exports.supabase=null;try{exports.supabase=h.createClient(a,c,{db:{schema:"public"},auth:{storageKey:"sb-auth-token",storage:typeof window<"u"?localStorage:void 0,autoRefreshToken:!0,persistSession:!0}})}catch(s){console.error("[Supabase] Failed to create client:",s),exports.supabase=h.createClient(a,c)}if(typeof window<"u"&&exports.supabase)try{e.ensureCrossSubdomainCookies([e.ACCESS_COOKIE,e.REFRESH_COOKIE]),E()}catch(s){console.warn("[Supabase] Error setting up cross-subdomain authentication:",s)}console.log("Supabase Configuration:",{url:a,hasKey:!!c,autoRefreshToken:!0,persistSession:!0});console.log("URL:",a.replace(/https:\/\/(.+)\.supabase\.co/,"https://*****.supabase.co"));console.log("Key configured:",!c.includes("your-anon-key"));console.log("Environment mode:","production");exports.initializeCrossSubdomainAuth=p;exports.restoreCrossSubdomainSession=g;exports.restoreSessionWithRetry=C;exports.setupAuthStateListener=E;
