"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const u=require("../supabase-f6e2692f.js"),r=require("./authRedirect.js");require("@supabase/supabase-js");function g(){const c=()=>{const e=window.location.hash,n=window.location.pathname,o=window.location.search;return e.includes("access_token=")||e.includes("refresh_token=")||o.includes("access_token=")||o.includes("refresh_token=")||n.includes("/auth/callback")||e.includes("#/auth/callback")},a=async()=>{if(!c())return!1;console.log("[SimpleCallback] Processing OAuth callback..."),console.log("[SimpleCallback] Current URL:",window.location.href),console.log("[SimpleCallback] Current hash:",window.location.hash);try{await new Promise(l=>setTimeout(l,500));const{data:e,error:n}=await u.supabase.auth.getSession();if(!(e!=null&&e.session)&&(window.location.hash.includes("access_token=")||window.location.search.includes("access_token="))){console.log("[SimpleCallback] No session found, trying to process URL tokens...");const{data:l,error:t}=await u.supabase.auth.getUser();if(l!=null&&l.user&&!t){console.log("[SimpleCallback] Successfully processed URL tokens for user:",l.user.email);const{data:i,error:k}=await u.supabase.auth.getSession();if(i!=null&&i.session)return console.log("[SimpleCallback] Session established after URL processing"),d(i.session)}}const{data:o,error:s}={data:e,error:n};return s?(console.error("[SimpleCallback] Error processing callback:",s),!1):o!=null&&o.session?d(o.session):(console.log("[SimpleCallback] No session found"),!1)}catch(e){return console.error("[SimpleCallback] Error processing callback:",e),!1}},d=async e=>{const n=e.user;console.log("[SimpleCallback] OAuth login successful:",n.email),e.access_token&&r.setSessionCookie(r.ACCESS_COOKIE,e.access_token),e.refresh_token&&r.setSessionCookie(r.REFRESH_COOKIE,e.refresh_token),r.syncCookiesToLocalStorage();const o=r.getPostLoginBase();console.log("[SimpleCallback] Post-login redirect URL:",o),console.log("[SimpleCallback] Session storage redirect:",sessionStorage.getItem("post-login-redirect")),console.log("[SimpleCallback] Local storage redirect:",localStorage.getItem("post-login-redirect"));const s=o||"/";return console.log("[SimpleCallback] Final redirect URL:",s),sessionStorage.removeItem("post-login-redirect"),localStorage.removeItem("post-login-redirect"),setTimeout(()=>{if(s.startsWith("/")){const t=`${window.location.origin}${s}`;console.log("[SimpleCallback] redirecting to:",t),window.location.href=t}else console.log("[SimpleCallback] redirecting to absolute URL:",s),window.location.href=s},100),!0};return typeof window<"u"&&(c()&&a(),window.addEventListener("hashchange",()=>{c()&&a()})),{isOAuthCallback:c,processCallback:a}}typeof window<"u"&&g();exports.setupSimpleCallback=g;
