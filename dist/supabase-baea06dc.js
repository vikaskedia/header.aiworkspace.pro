"use strict";var I=Object.create;var b=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var A=(e,o,a,t)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of _(o))!m.call(e,n)&&n!==a&&b(e,n,{get:()=>o[n],enumerable:!(t=k(o,n))||t.enumerable});return e};var O=(e,o,a)=>(a=e!=null?I(y(e)):{},A(o||!e||!e.__esModule?b(a,"default",{value:e,enumerable:!0}):a,e));const s=require("./utils/authRedirect.js");async function R(){try{console.log("[auth][init] Starting cross-subdomain authentication initialization..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),g();const e=await C(2,100);return e.success?(console.log("[auth][init] Cross-subdomain authentication initialized successfully"),{success:!0,session:e.session}):(console.log("[auth][init] Cross-subdomain authentication initialization completed (no active session)"),{success:!1,error:e.error})}catch(e){return console.error("[auth][init] Error during cross-subdomain authentication initialization:",e),{success:!1,error:e}}}async function N(){try{s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]);const e=s.getCookie(s.ACCESS_COOKIE),o=s.getCookie(s.REFRESH_COOKIE);if(e&&o){const a=await c(),{data:{session:t}}=await a.auth.getSession();if(!t){const{data:n,error:u}=await a.auth.setSession({access_token:e,refresh_token:o});u?console.log("[auth][restore] error",u):console.log("[auth][restore] done",!!n.session)}}else console.log("[auth][restore] no cookies present");s.syncCookiesToLocalStorage()}catch(e){console.log("[auth][restore] exception",e)}}let f=!1;async function g(){if(f){console.log("[auth][listener] Auth state listener already set up, skipping...");return}console.log("[auth][listener] Setting up auth state listener...");try{(await c()).auth.onAuthStateChange(async(o,a)=>{switch(console.log("[auth][listener] Auth state changed:",o,!!a),o){case"TOKEN_REFRESHED":console.log("[auth][listener] Token refreshed successfully"),a&&(s.setSessionCookie(s.ACCESS_COOKIE,a.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,a.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage());break;case"SIGNED_IN":console.log("[auth][listener] User signed in"),a&&(s.setSessionCookie(s.ACCESS_COOKIE,a.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,a.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage());break;case"SIGNED_OUT":console.log("[auth][listener] User signed out");break;case"USER_UPDATED":console.log("[auth][listener] User updated");break;default:console.log("[auth][listener] Unhandled auth event:",o)}}),f=!0,console.log("[auth][listener] Auth state listener set up successfully")}catch(e){console.warn("[auth][listener] Failed to setup auth state listener:",e)}}async function C(e=3,o=200){var a;for(let t=1;t<=e;t++)try{console.log(`[auth][restore] Attempt ${t}/${e}`);let n=null;try{const i=await(await c()).auth.getSession();n=(a=i==null?void 0:i.data)==null?void 0:a.session}catch(r){console.warn("[auth][restore] Error getting Supabase session:",r)}if(n&&n.user)return console.log("[auth][restore] Active session found"),{success:!0,session:n};t>1&&(console.log("[auth][restore] Re-syncing cross-subdomain cookies..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),await new Promise(r=>setTimeout(r,o*t)));const u=s.getCookie(s.ACCESS_COOKIE),d=s.getCookie(s.REFRESH_COOKIE);if(console.log(`[auth][restore] Cookie check - Access: ${!!u}, Refresh: ${!!d}`),u&&d){console.log("[auth][restore] Attempting to restore session from cookies...");try{const r=await c(),{data:i,error:h}=await r.auth.setSession({access_token:u,refresh_token:d});if(h){if(console.log(`[auth][restore] Attempt ${t} failed:`,h.message),t===e)return{success:!1,error:h};continue}if(i.session)return console.log("[auth][restore] Session restored successfully"),s.setSessionCookie(s.ACCESS_COOKIE,i.session.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,i.session.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage(),{success:!0,session:i.session}}catch(r){if(console.warn(`[auth][restore] setSession error on attempt ${t}:`,r),t===e)return{success:!1,error:r};continue}}else if(console.log(`[auth][restore] Attempt ${t} - No cookies found`),t===e)return{success:!1,error:"No valid session or cookies"};t<e&&await new Promise(r=>setTimeout(r,o*t))}catch(n){if(console.log(`[auth][restore] Attempt ${t} exception:`,n),t===e)return{success:!1,error:n}}return console.log("[auth][restore] All attempts failed"),{success:!1,error:"All restoration attempts failed"}}async function E(){var e;try{const{createClient:o}=await import("@supabase/supabase-js");return console.log("[Supabase] Successfully imported @supabase/supabase-js"),o}catch(o){console.warn("[Supabase] Failed to import @supabase/supabase-js:",o)}if(typeof window<"u"){if((e=window.supabase)!=null&&e.createClient)return console.log("[Supabase] Using global Supabase client"),window.supabase.createClient;if(window.createClient)return console.log("[Supabase] Using global createClient function"),window.createClient}try{if(typeof require<"u"){const{createClient:o}=require("@supabase/supabase-js");return console.log("[Supabase] Successfully required @supabase/supabase-js"),o}}catch(o){console.warn("[Supabase] Failed to require @supabase/supabase-js:",o)}return console.error("[Supabase] No Supabase client available, using mock with error handling"),(o,a,t)=>(console.warn("[Supabase] Using mock client - Supabase not properly configured"),{auth:{getSession:async()=>(console.warn("[Supabase] Mock getSession called - returning null session"),{data:{session:null},error:null}),setSession:async n=>(console.warn("[Supabase] Mock setSession called - returning null session"),{data:{session:null},error:null}),signOut:async()=>(console.warn("[Supabase] Mock signOut called"),{error:null}),signInWithPassword:async n=>(console.warn("[Supabase] Mock signInWithPassword called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signUp:async n=>(console.warn("[Supabase] Mock signUp called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signInWithOAuth:async n=>(console.warn("[Supabase] Mock signInWithOAuth called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),resetPasswordForEmail:async(n,u)=>(console.warn("[Supabase] Mock resetPasswordForEmail called"),{data:{},error:{message:"Supabase not configured"}}),onAuthStateChange:n=>(console.warn("[Supabase] Mock onAuthStateChange called"),{data:{subscription:{unsubscribe:()=>{}}}})}})}const p="https://oqdnbpmmgntqtigstaow.supabase.co",S="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9xZG5icG1tZ250cXRpZ3N0YW93Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQ0NTk2NDYsImV4cCI6MjA1MDAzNTY0Nn0.rn0nRY9xLgLt-ajiSPeG0PcdS9V-549C1yeqhcxxG40";exports.supabase=null;let l=null;async function w(){return l||(l=(async()=>{try{const e=await E();return p&&S&&(exports.supabase=e(p,S,{db:{schema:"public"},auth:{storageKey:"sb-auth-token-shared",storage:typeof window<"u"?localStorage:void 0,autoRefreshToken:!0,persistSession:!0}}),console.log("[Supabase] Client initialized successfully")),exports.supabase}catch(e){console.error("[Supabase] Failed to initialize client:",e);const o=await E();return exports.supabase=o("https://placeholder.supabase.co","placeholder-key"),exports.supabase}})(),l)}w();const c=async()=>(exports.supabase||await w(),exports.supabase);if(typeof window<"u")try{s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),g().catch(e=>{console.warn("[Supabase] Error setting up auth state listener:",e)})}catch(e){console.warn("[Supabase] Error during cross-subdomain setup:",e)}typeof window<"u"&&(window.addEventListener("error",e=>{e.error&&e.error.message&&e.error.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught TypeError: ne is not a function - this is handled gracefully"),e.preventDefault())}),window.addEventListener("unhandledrejection",e=>{e.reason&&e.reason.message&&e.reason.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught unhandled promise rejection with TypeError: ne is not a function"),e.preventDefault())}));console.log("Supabase Configuration:",{url:p,hasKey:!!S,autoRefreshToken:!0,persistSession:!0});console.log("URL:",p.replace(/https:\/\/(.+)\.supabase\.co/,"https://*****.supabase.co"));console.log("Key configured:",!S.includes("your-anon-key"));console.log("Environment mode:","production");exports.getSupabase=c;exports.initializeCrossSubdomainAuth=R;exports.restoreCrossSubdomainSession=N;exports.restoreSessionWithRetry=C;exports.setupAuthStateListener=g;
