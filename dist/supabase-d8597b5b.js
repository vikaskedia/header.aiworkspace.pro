"use strict";var k=Object.create;var b=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var K=(e,s,n,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of m(s))!A.call(e,a)&&a!==n&&b(e,a,{get:()=>s[a],enumerable:!(t=_(s,a))||t.enumerable});return e};var I=(e,s,n)=>(n=e!=null?k(O(e)):{},K(s||!e||!e.__esModule?b(n,"default",{value:e,enumerable:!0}):n,e));const o=require("./utils/authRedirect.js");async function R(){try{console.log("[auth][init] Starting cross-subdomain authentication initialization..."),o.ensureCrossSubdomainCookies([o.ACCESS_COOKIE,o.REFRESH_COOKIE]),h();const e=await C(2,100);return e.success?(console.log("[auth][init] Cross-subdomain authentication initialized successfully"),{success:!0,session:e.session}):(console.log("[auth][init] Cross-subdomain authentication initialization completed (no active session)"),{success:!1,error:e.error})}catch(e){return console.error("[auth][init] Error during cross-subdomain authentication initialization:",e),{success:!1,error:e}}}async function U(){try{o.ensureCrossSubdomainCookies([o.ACCESS_COOKIE,o.REFRESH_COOKIE]);const e=o.getCookie(o.ACCESS_COOKIE),s=o.getCookie(o.REFRESH_COOKIE);if(e&&s){const n=await d(),{data:{session:t}}=await n.auth.getSession();if(!t){const{data:a,error:l}=await n.auth.setSession({access_token:e,refresh_token:s});l?console.log("[auth][restore] error",l):console.log("[auth][restore] done",!!a.session)}}else console.log("[auth][restore] no cookies present");o.syncCookiesToLocalStorage()}catch(e){console.log("[auth][restore] exception",e)}}let w=!1;async function h(){if(w){console.log("[auth][listener] Auth state listener already set up, skipping...");return}console.log("[auth][listener] Setting up auth state listener...");try{(await d()).auth.onAuthStateChange(async(s,n)=>{switch(console.log("[auth][listener] Auth state changed:",s,!!n),s){case"TOKEN_REFRESHED":console.log("[auth][listener] Token refreshed successfully"),n&&(o.setSessionCookie(o.ACCESS_COOKIE,n.access_token,60*60*24*365),o.setSessionCookie(o.REFRESH_COOKIE,n.refresh_token,60*60*24*365),o.syncCookiesToLocalStorage());break;case"SIGNED_IN":console.log("[auth][listener] User signed in"),n&&(o.setSessionCookie(o.ACCESS_COOKIE,n.access_token,60*60*24*365),o.setSessionCookie(o.REFRESH_COOKIE,n.refresh_token,60*60*24*365),o.syncCookiesToLocalStorage());break;case"SIGNED_OUT":console.log("[auth][listener] User signed out"),typeof window<"u"&&window.dispatchEvent(new CustomEvent("session-logout-detected",{detail:{timestamp:new Date}}));break;case"USER_UPDATED":console.log("[auth][listener] User updated");break;default:console.log("[auth][listener] Unhandled auth event:",s)}}),w=!0,console.log("[auth][listener] Auth state listener set up successfully")}catch(e){console.warn("[auth][listener] Failed to setup auth state listener:",e)}}async function C(e=3,s=200){var n;for(let t=1;t<=e;t++)try{console.log(`[auth][restore] Attempt ${t}/${e}`);let a=null;try{const u=await(await d()).auth.getSession();a=(n=u==null?void 0:u.data)==null?void 0:n.session}catch(i){console.warn("[auth][restore] Error getting Supabase session:",i)}if(a&&a.user)return console.log("[auth][restore] Active session found"),{success:!0,session:a};t>1&&(console.log("[auth][restore] Re-syncing cross-subdomain cookies..."),o.ensureCrossSubdomainCookies([o.ACCESS_COOKIE,o.REFRESH_COOKIE]),await new Promise(i=>setTimeout(i,s*t)));const l=o.getCookie(o.ACCESS_COOKIE),S=o.getCookie(o.REFRESH_COOKIE);if(console.log(`[auth][restore] Cookie check - Access: ${!!l}, Refresh: ${!!S}`),l&&S){console.log("[auth][restore] Attempting to restore session from cookies...");try{const i=await d(),{data:u,error:f}=await i.auth.setSession({access_token:l,refresh_token:S});if(f){if(console.log(`[auth][restore] Attempt ${t} failed:`,f.message),t===e)return{success:!1,error:f};continue}if(u.session)return console.log("[auth][restore] Session restored successfully"),o.setSessionCookie(o.ACCESS_COOKIE,u.session.access_token,60*60*24*365),o.setSessionCookie(o.REFRESH_COOKIE,u.session.refresh_token,60*60*24*365),o.syncCookiesToLocalStorage(),{success:!0,session:u.session}}catch(i){if(console.warn(`[auth][restore] setSession error on attempt ${t}:`,i),t===e)return{success:!1,error:i};continue}}else if(console.log(`[auth][restore] Attempt ${t} - No cookies found`),t===e)return{success:!1,error:"No valid session or cookies"};t<e&&await new Promise(i=>setTimeout(i,s*t))}catch(a){if(console.log(`[auth][restore] Attempt ${t} exception:`,a),t===e)return{success:!1,error:a}}return console.log("[auth][restore] All attempts failed"),{success:!1,error:"All restoration attempts failed"}}async function E(){var e;try{const{createClient:s}=await import("@supabase/supabase-js");return console.log("[Supabase] Successfully imported @supabase/supabase-js"),s}catch(s){console.warn("[Supabase] Failed to import @supabase/supabase-js:",s)}if(typeof window<"u"){if((e=window.supabase)!=null&&e.createClient)return console.log("[Supabase] Using global Supabase client"),window.supabase.createClient;if(window.createClient)return console.log("[Supabase] Using global createClient function"),window.createClient}try{if(typeof require<"u"){const{createClient:s}=require("@supabase/supabase-js");return console.log("[Supabase] Successfully required @supabase/supabase-js"),s}}catch(s){console.warn("[Supabase] Failed to require @supabase/supabase-js:",s)}return console.error("[Supabase] No Supabase client available, using mock with error handling"),(s,n,t)=>(console.warn("[Supabase] Using mock client - Supabase not properly configured"),{auth:{getSession:async()=>(console.warn("[Supabase] Mock getSession called - returning null session"),{data:{session:null},error:null}),setSession:async a=>(console.warn("[Supabase] Mock setSession called - returning null session"),{data:{session:null},error:null}),signOut:async()=>(console.warn("[Supabase] Mock signOut called"),{error:null}),signInWithPassword:async a=>(console.warn("[Supabase] Mock signInWithPassword called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signUp:async a=>(console.warn("[Supabase] Mock signUp called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signInWithOAuth:async a=>(console.warn("[Supabase] Mock signInWithOAuth called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),resetPasswordForEmail:async(a,l)=>(console.warn("[Supabase] Mock resetPasswordForEmail called"),{data:{},error:{message:"Supabase not configured"}}),onAuthStateChange:a=>(console.warn("[Supabase] Mock onAuthStateChange called"),{data:{subscription:{unsubscribe:()=>{}}}})}})}let g=null;function F(e){g=e,console.log("[Supabase] Configuration set by consuming app"),c||y()}function p(){if(g)return g;if(typeof window<"u"){const e=window.__SUPABASE_URL__,s=window.__SUPABASE_ANON_KEY__;if(e&&s)return{url:e,anonKey:s}}return null}const T=p();T||console.warn("[Supabase] No configuration found. Please call configureSupabase() with your credentials.");exports.supabase=null;let c=null;async function y(){return c||(c=(async()=>{try{const e=await E(),s=p();if(s&&s.url&&s.anonKey){if(exports.supabase=e(s.url,s.anonKey,{db:{schema:"public"},auth:{storageKey:"sb-auth-token-shared",storage:typeof window<"u"?localStorage:void 0,autoRefreshToken:!0,persistSession:!0}}),console.log("[Supabase] Client initialized successfully"),typeof window<"u")try{await h()}catch(n){console.warn("[Supabase] Error setting up auth state listener after init:",n)}}else console.warn("[Supabase] Missing configuration, using fallback client"),exports.supabase=e("https://placeholder.supabase.co","placeholder-key");return exports.supabase}catch(e){console.error("[Supabase] Failed to initialize client:",e);const s=await E();return exports.supabase=s("https://placeholder.supabase.co","placeholder-key"),exports.supabase}})(),c)}const d=async()=>{if(!exports.supabase){if(!p())throw new Error("[Supabase] Missing configuration. Call configureSupabase({ url, anonKey }) before using the header package.");await y()}return exports.supabase};if(typeof window<"u")try{o.ensureCrossSubdomainCookies([o.ACCESS_COOKIE,o.REFRESH_COOKIE])}catch(e){console.warn("[Supabase] Error during cross-subdomain setup:",e)}typeof window<"u"&&(window.addEventListener("error",e=>{e.error&&e.error.message&&e.error.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught TypeError: ne is not a function - this is handled gracefully"),e.preventDefault())}),window.addEventListener("unhandledrejection",e=>{e.reason&&e.reason.message&&e.reason.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught unhandled promise rejection with TypeError: ne is not a function"),e.preventDefault())}));const r=p();console.log("Supabase Configuration:",{url:(r==null?void 0:r.url)||"Not configured",hasKey:!!(r!=null&&r.anonKey),autoRefreshToken:!0,persistSession:!0});r!=null&&r.url&&console.log("URL:",r.url.replace(/https:\/\/(.+)\.supabase\.co/,"https://*****.supabase.co"));console.log("Key configured:",!!(r!=null&&r.anonKey)&&!r.anonKey.includes("your-anon-key"));console.log("Environment mode:","production");exports.configureSupabase=F;exports.getSupabase=d;exports.initializeCrossSubdomainAuth=R;exports.restoreCrossSubdomainSession=U;exports.restoreSessionWithRetry=C;exports.setupAuthStateListener=h;
