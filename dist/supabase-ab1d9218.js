"use strict";var k=Object.create;var m=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty;var R=(e,o,n,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of A(o))!K.call(e,t)&&t!==n&&m(e,t,{get:()=>o[t],enumerable:!(a=O(o,t))||a.enumerable});return e};var T=(e,o,n)=>(n=e!=null?k(I(e)):{},R(o||!e||!e.__esModule?m(n,"default",{value:e,enumerable:!0}):n,e));const s=require("./utils/authRedirect.js");function w(){try{return console.log("[auth][immediate] Setting up immediate cross-subdomain authentication..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),g().catch(e=>{console.log("[auth][immediate] Auth state listener setup deferred:",e.message)}),console.log("[auth][immediate] Immediate cross-subdomain authentication setup completed"),!0}catch(e){return console.error("[auth][immediate] Error during immediate cross-subdomain authentication setup:",e),!1}}async function U(){try{console.log("[auth][init] Starting cross-subdomain authentication initialization..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),g();const e=await E(5,50);return e.success?(console.log("[auth][init] Cross-subdomain authentication initialized successfully"),{success:!0,session:e.session}):(console.log("[auth][init] Cross-subdomain authentication initialization completed (no active session)"),{success:!1,error:e.error})}catch(e){return console.error("[auth][init] Error during cross-subdomain authentication initialization:",e),{success:!1,error:e}}}async function F(){try{s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]);const e=s.getCookie(s.ACCESS_COOKIE),o=s.getCookie(s.REFRESH_COOKIE);if(e&&o){const n=await d(),{data:{session:a}}=await n.auth.getSession();if(!a){const{data:t,error:c}=await n.auth.setSession({access_token:e,refresh_token:o});c?console.log("[auth][restore] error",c):console.log("[auth][restore] done",!!t.session)}}else console.log("[auth][restore] no cookies present");s.syncCookiesToLocalStorage()}catch(e){console.log("[auth][restore] exception",e)}}let f=!1;async function g(){if(f){console.log("[auth][listener] Auth state listener already set up, skipping...");return}console.log("[auth][listener] Setting up auth state listener...");try{(await d()).auth.onAuthStateChange(async(o,n)=>{switch(console.log("[auth][listener] Auth state changed:",o,!!n),o){case"TOKEN_REFRESHED":console.log("[auth][listener] Token refreshed successfully"),n&&(s.setSessionCookie(s.ACCESS_COOKIE,n.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,n.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage());break;case"SIGNED_IN":console.log("[auth][listener] User signed in"),n&&(s.setSessionCookie(s.ACCESS_COOKIE,n.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,n.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage());break;case"SIGNED_OUT":console.log("[auth][listener] User signed out"),typeof window<"u"&&window.dispatchEvent(new CustomEvent("session-logout-detected",{detail:{timestamp:new Date}}));break;case"USER_UPDATED":console.log("[auth][listener] User updated");break;default:console.log("[auth][listener] Unhandled auth event:",o)}}),f=!0,console.log("[auth][listener] Auth state listener set up successfully")}catch(e){console.warn("[auth][listener] Failed to setup auth state listener:",e),e.message&&e.message.includes("Missing configuration")&&(console.log("[auth][listener] Supabase not configured yet, will retry when configured"),f=!1)}}async function E(e=5,o=100){var n;for(let a=1;a<=e;a++)try{console.log(`[auth][restore] Attempt ${a}/${e}`);let t=null;try{const u=await(await d()).auth.getSession();t=(n=u==null?void 0:u.data)==null?void 0:n.session}catch(r){if(console.warn("[auth][restore] Error getting Supabase session:",r),r.message&&r.message.includes("Missing configuration"))return console.log("[auth][restore] Supabase not configured yet, skipping restoration"),{success:!1,error:"Supabase not configured"}}if(t&&t.user)return console.log("[auth][restore] Active session found"),{success:!0,session:t};a>1&&(console.log("[auth][restore] Re-syncing cross-subdomain cookies..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),await new Promise(r=>setTimeout(r,o*a)));const c=s.getCookie(s.ACCESS_COOKIE),p=s.getCookie(s.REFRESH_COOKIE);if(console.log(`[auth][restore] Cookie check - Access: ${!!c}, Refresh: ${!!p}`),c&&p){console.log("[auth][restore] Attempting to restore session from cookies...");try{const r=await d(),{data:u,error:S}=await r.auth.setSession({access_token:c,refresh_token:p});if(S){if(console.log(`[auth][restore] Attempt ${a} failed:`,S.message),a===e)return{success:!1,error:S};continue}if(u.session)return console.log("[auth][restore] Session restored successfully"),s.setSessionCookie(s.ACCESS_COOKIE,u.session.access_token,60*60*24*365),s.setSessionCookie(s.REFRESH_COOKIE,u.session.refresh_token,60*60*24*365),s.syncCookiesToLocalStorage(),{success:!0,session:u.session}}catch(r){if(console.warn(`[auth][restore] setSession error on attempt ${a}:`,r),r.message&&r.message.includes("Missing configuration"))return console.log("[auth][restore] Supabase not configured yet, skipping restoration"),{success:!1,error:"Supabase not configured"};if(a===e)return{success:!1,error:r};continue}}else if(console.log(`[auth][restore] Attempt ${a} - No cookies found`),a===e)return{success:!1,error:"No valid session or cookies"};a<e&&await new Promise(r=>setTimeout(r,o*a))}catch(t){if(console.log(`[auth][restore] Attempt ${a} exception:`,t),a===e)return{success:!1,error:t}}return console.log("[auth][restore] All attempts failed"),{success:!1,error:"All restoration attempts failed"}}function y(){try{return console.log("[auth][domain-change] Handling domain change authentication..."),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE]),g().catch(e=>{console.log("[auth][domain-change] Auth state listener setup deferred:",e.message)}),E(7,25).then(e=>{e.success?console.log("[auth][domain-change] Domain change authentication successful"):console.log("[auth][domain-change] Domain change authentication failed:",e.error)}).catch(e=>{console.error("[auth][domain-change] Domain change authentication error:",e)}),console.log("[auth][domain-change] Domain change authentication setup completed"),!0}catch(e){return console.error("[auth][domain-change] Error during domain change authentication setup:",e),!1}}async function C(){var e;try{const{createClient:o}=await import("@supabase/supabase-js");return console.log("[Supabase] Successfully imported @supabase/supabase-js"),o}catch(o){console.warn("[Supabase] Failed to import @supabase/supabase-js:",o)}if(typeof window<"u"){if((e=window.supabase)!=null&&e.createClient)return console.log("[Supabase] Using global Supabase client"),window.supabase.createClient;if(window.createClient)return console.log("[Supabase] Using global createClient function"),window.createClient}try{if(typeof require<"u"){const{createClient:o}=require("@supabase/supabase-js");return console.log("[Supabase] Successfully required @supabase/supabase-js"),o}}catch(o){console.warn("[Supabase] Failed to require @supabase/supabase-js:",o)}return console.error("[Supabase] No Supabase client available, using mock with error handling"),(o,n,a)=>(console.warn("[Supabase] Using mock client - Supabase not properly configured"),{auth:{getSession:async()=>(console.warn("[Supabase] Mock getSession called - returning null session"),{data:{session:null},error:null}),setSession:async t=>(console.warn("[Supabase] Mock setSession called - returning null session"),{data:{session:null},error:null}),signOut:async()=>(console.warn("[Supabase] Mock signOut called"),{error:null}),signInWithPassword:async t=>(console.warn("[Supabase] Mock signInWithPassword called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signUp:async t=>(console.warn("[Supabase] Mock signUp called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),signInWithOAuth:async t=>(console.warn("[Supabase] Mock signInWithOAuth called"),{data:{session:null,user:null},error:{message:"Supabase not configured"}}),resetPasswordForEmail:async(t,c)=>(console.warn("[Supabase] Mock resetPasswordForEmail called"),{data:{},error:{message:"Supabase not configured"}}),onAuthStateChange:t=>(console.warn("[Supabase] Mock onAuthStateChange called"),{data:{subscription:{unsubscribe:()=>{}}}})}})}let b=null;function D(e){b=e,console.log("[Supabase] Configuration set by consuming app"),l||_()}function h(){if(b)return b;if(typeof window<"u"){const e=window.__SUPABASE_URL__,o=window.__SUPABASE_ANON_KEY__;if(e&&o)return{url:e,anonKey:o}}return null}const N=h();N||console.warn("[Supabase] No configuration found. Please call configureSupabase() with your credentials.");exports.supabase=null;let l=null;async function _(){return l||(l=(async()=>{try{const e=await C(),o=h();if(o&&o.url&&o.anonKey){if(exports.supabase=e(o.url,o.anonKey,{db:{schema:"public"},auth:{storageKey:"sb-auth-token-shared",storage:typeof window<"u"?localStorage:void 0,autoRefreshToken:!0,persistSession:!0}}),console.log("[Supabase] Client initialized successfully"),typeof window<"u")try{await g(),y(),w(),s.ensureCrossSubdomainCookies([s.ACCESS_COOKIE,s.REFRESH_COOKIE])}catch(n){console.warn("[Supabase] Error setting up auth components after init:",n)}}else console.warn("[Supabase] Missing configuration, using fallback client"),exports.supabase=e("https://placeholder.supabase.co","placeholder-key");return exports.supabase}catch(e){console.error("[Supabase] Failed to initialize client:",e);const o=await C();return exports.supabase=o("https://placeholder.supabase.co","placeholder-key"),exports.supabase}})(),l)}const d=async()=>{if(!exports.supabase){if(!h())throw new Error("[Supabase] Missing configuration. Call configureSupabase({ url, anonKey }) before using the header package.");await _()}return exports.supabase};typeof window<"u"&&(window.addEventListener("error",e=>{e.error&&e.error.message&&e.error.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught TypeError: ne is not a function - this is handled gracefully"),e.preventDefault())}),window.addEventListener("unhandledrejection",e=>{e.reason&&e.reason.message&&e.reason.message.includes("ne is not a function")&&(console.warn("[Supabase] Caught unhandled promise rejection with TypeError: ne is not a function"),e.preventDefault())}));const i=h();console.log("Supabase Configuration:",{url:(i==null?void 0:i.url)||"Not configured",hasKey:!!(i!=null&&i.anonKey),autoRefreshToken:!0,persistSession:!0});i!=null&&i.url&&console.log("URL:",i.url.replace(/https:\/\/(.+)\.supabase\.co/,"https://*****.supabase.co"));console.log("Key configured:",!!(i!=null&&i.anonKey)&&!i.anonKey.includes("your-anon-key"));console.log("Environment mode:","production");exports.configureSupabase=D;exports.getSupabase=d;exports.handleDomainChangeAuth=y;exports.initializeCrossSubdomainAuth=U;exports.restoreCrossSubdomainSession=F;exports.restoreSessionWithRetry=E;exports.setupAuthStateListener=g;exports.setupImmediateCrossSubdomainAuth=w;
